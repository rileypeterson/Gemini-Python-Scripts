[File_Paths]
# Directory where simulations will be made
# Created if it doesn't exist
#base_folder : /Users/test/Gemini-Python-Scripts/Examples/example_2/
# (Optional) login.cl file so that iraf/pyraf is imported properly
login_cl_path : /Users/test/
# PSF kernel that will be convolved with the galaxies
psf_image : /Users/test/Gemini-Python-Scripts/Examples/example_1/psf-1500-1500.fits
# Path to galfit executable (typically "galfit")
galfit_path : /Users/test/Downloads/galfit

[General_Params]
# None or int, if None result will not be the same for each run
# Seed is logged in the output
universal_seed : None
# Magnitude zeropoint
mag_zp : 25.9463
# Number of simulations to create
# Need be even int
number_of_sims : 500
# Size of cutouts to be created for individual simulations
# Need be even int, recommend ~400
cutout_size : 400
# Range within which sky values will be chosen initially, typically [0,0]
sky_range : [0,0]


[Tasks]
# Tasks to be executed (in this order)
# Create galfit input (feedme) files
make_feedmes : yes
# If "yes" simulated galaxies are placed in pairs with a predetermined "distance" between galaxies
make_pairs : no
# Create galaxy models according to feedme files using GALFIT
make_galaxies : yes
# If "yes" galaxies are convolved with the supplied psf_image (convolve_fft)
convolve : yes
# If "yes", adds noise to individual cutouts
mknoise_cutouts : yes
# If "yes", the large field is created
create_large_field : yes
# If "yes", introduce noise before models are added
add_mknoise_large1 : no
# If "yes", models will be added to the image (typically "yes")
add_models : yes
# If "yes", noise is added after galaxies have been added to image
add_mknoise_large2 : yes
# If "yes", drizzling is performed
drizzle : no


[Display_Options]
# If "yes", displays 5 galaxies at random (in ds9) and shows their feedme files
display_5 : no
# If "yes" and create_large_field : "yes", displays the large field at the end
display_large_field : yes


[make_feedmes_params]
# Make feedmes verbosely
make_feedmes_verbose : yes
# Method by which feedmes are created
# Options are **only** "random" or "interpolate"
make_feedmes_method : random
# If "random":
mag_range : [16,28]
# in pixels
re_range : [2,40]
n_range : [0.5,5.5]
q_range : [0.05,1.0]
pa_range : [-90,90]

# If "interpolate"
chain_type1 : cubic
chain_plot1 : yes
chain_bins1 : 40
chain_data1 : /Users/rpeterson/FP/GALFIT_Simulations1/SExtractor_missing_problem/actual_data_trial_field/UV105842F160W/UV105842F160W_phot/UV105842F160W_tab_all.fits
chain_column1 : MAG_AUTO
chain_obj1 : mag

do_chain2 : yes
# If "do_chain2"
chain_type2 : linear
chain_plot2 : yes
chain_data2 : /Users/rpeterson/FP/GALFIT_Simulations1/SExtractor_missing_problem/actual_data_trial_field/UV105842F160W/UV105842F160W_phot/UV105842F160W_tab_all.fits
chain_column2 : FLUX_RADIUS
chain_obj2 : re


[make_pairs_params]
### Makes pairs of galaxies. First half are "parents" randomly placed, second half are "childs" determined by stepping through these intervals
### The last argument in each of these multiplied together should be half the number of sims
### For example pixel_distance_steps=np.linspace(5,55,10),luminosity_ratio_steps=np.linspace(0.5,2,4),re_ratio_steps=np.linspace(0.2,3,5),n_steps=np.linspace(1,4,2)
### My number of sims is 800, half of this is 400. 10*4*5*2=400
# If make_pairs : "yes"
#These can also be custom non linear arrays
pixel_distance_steps : (5,55,10)
#2 means child galaxy will be twice as bright
luminosity_ratio_steps : (0.5,2,4)
n_steps : (1,4,2)
# if "yes" the re value will be interpolated from the make_interpolate_chain
interp_re : yes
# If interp_re : "no"
#ratio is circularized effective radius, so it factors in axis ratio, 2 means child will be twice as large (circularized re)
re_ratio_steps : (0.2,3,5)

[make_galaxies_params]
make_galaxies_verbose : no

[convolve_params]
convolution_verbose : yes

[mknoise_cutouts_params]
# Add noise to individual cutouts (useful if adding to an existing image)
mknoise_cutouts_verbose : yes
background : 0.136392
gain : 6529.37744
rdnoise : 4
poisson : yes

[create_large_field_params]
#should be full path to it, shouldn't be in base_folder. If not "default", the image provided will be used to determine possible coordinates (useful if image is rotated)
image_to_sim : default
#default is 0, if image_to_sim has multiple extensions this is the extensions number you want to simulate
image_to_sim_ext : 0
#should be full path to it. If not "default" galaxies will be added to this image
image_to_add_to : default
# Should probably be zero, if nonzero it sets all the points in your simulated image that aren't zero in the original to sky_value
sky_value : 0

[add_mknoise_large1_params]
# Add noise prior to adding galaxies (typically would add noise individually or after adding galaxies (mknoise2))
background1 : 0.136392
gain1 : 6529.37744
rdnoise1 : 2
poisson1 : yes

[add_models_params]
# Parameters regarding how models are added to a larger image
add_models_verbose : yes
#if "yes" a region file will be created and if display_large_field="yes" the region file is displayed. Note their is a 3 pixel offset so that labels don't block the actual galaxy.
label : yes
label_verbose : no
#if "yes", saves final output
save : no
#options are "", "_convolved", "_noised" or "_convolved_noised" #the type of model that will be added
which_to_add : _convolved
# should be <= number_of_sims, number of models that will be added to the large field
how_many_to_add : ${General_Params:number_of_sims}
# if "yes", galaxies are prevented from going near the edge of the image according to the pixel distance clearance
not_near_edge : yes
# If not_near_edge : "yes"
# in pixels
clearance : 50

[add_mknoise_large2_params]
# Add noise after galaxies have been added to the large field
background2 : 0.623
#mknoise gain
gain2 : 652.93
#mknoise read noise
rdnoise2 : 20
#mknoise add poisson noise
poisson2 : yes

[drizzle_params]
# Parameters for astrodrizzling
#Path to your flt images wildcard (*) or question mark (?) should be placed where necessary. E.g. path_to_flts="/Users/rpeterson/Downloads/id6p01???_flt.fits", such that glob.glob(path_to_flts) will get all your flts
path_to_flts : /Users/rpeterson/Downloads/id6p01???_flt.fits
path_to_actual_driz : /Users/rpeterson/FP/do_everything/UV105842F160W/UV105842F160W_drz.fits
#Will display blotted (distorted flts)
display_blots : yes
#If "default" will use the background2 value above as the value for each flt, otherwise it is the list of specific values for each simulated flt e.g. backgrounds=[0.6351,0.606,0.6373,0.606]
backgrounds : [0.6351,0.606,0.6373,0.606]
#Will display the blotted noised images
compare_noised_blots_sky : yes

# Astrodrizzle Parameters, default is to just make the finally drizzled image without sky subtraction and to clean intermediate images, the user can edit this within the actual code to suite their needs
final_bits : 576
final_pixfrac : 0.8
final_fillval : 0
final_scale : 0.06
final_rot : 0
resetbits : 0

# Compare to original image
compare_final_drz : yes
#if "yes", compares sky of final_image for example drizzle="no" and add_mknoise_large2="yes" to image to sim. If image_to_sim is default makes a histogram of the simulate image
compare_sky : no
